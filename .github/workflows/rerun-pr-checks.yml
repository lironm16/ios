name: Re-run Specific Workflow for PRs

on:
  pull_request:
  repository_dispatch:
    types:
      - rerun-pr-check

jobs:
  rerun-checks:
    runs-on: ubuntu-latest

    steps:
      # - name: Install GitHub CLI
      #   run: sudo apt-get install gh -y

      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Fetch Open PRs Targeting the Branch
        id: fetch-prs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Use the branch from the client payload
          TARGET_BRANCH="main"
          echo "Target Branch: $TARGET_BRANCH"

          # Fetch all open PRs targeting the specified branch
          PRS=$(gh pr list --state open --json number,baseRefName,headRefName,headRefOid --jq \
            ".[] | select(.baseRefName == \"$TARGET_BRANCH\") | {number: .number, branch: .headRefName, sha: .headRefOid}")
          echo "PR Data: $PRS"
          echo "pr_data=$PRS" >> $GITHUB_ENV

      - name: Re-run Latest Workflow for PRs
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Wrap JSON in an array if it's a single object
          PRS_JSON='[{"branch":"feature/shared","number":7,"sha":"31e312fc8a89e8f1a3de16b7f2c1f6e18f01e636"}]'
          WORKFLOW_FILE="fake-pr-check.yml"
          
          # Process each PR targeting the branch
          echo $PRS_JSON | jq -c '.[]' | while read pr; do
            PR_NUMBER=$(echo $pr | jq -r '.number')
            PR_BRANCH=$(echo $pr | jq -r '.branch')
            PR_SHA=$(echo $pr | jq -r '.sha')
          
            echo "Processing PR #$PR_NUMBER on branch $PR_BRANCH with SHA $PR_SHA..."
          
            # Fetch the latest run for the specific workflow filename
            RUN_ID=$(gh run list --json databaseId,workflowName,headBranch,headSha,createdAt,workflowName --jq \
              ".[] | select(.workflowName == \".github/workflows/$WORKFLOW_FILE\" and .headBranch == \"$PR_BRANCH\" and .headSha == \"$PR_SHA\") | sort_by(.createdAt) | last | .databaseId")
          
            # Ensure a matching run exists
            if [ -z "$RUN_ID" ]; then
              echo "No workflow runs found for PR #$PR_NUMBER with workflow file $WORKFLOW_FILE."
              continue
            fi
          
            # Re-run the latest workflow
            echo "Re-running workflow run with ID: $RUN_ID for PR #$PR_NUMBER..."
            curl -X POST \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/lironm16/ios/actions/runs/$RUN_ID/rerun
          done

